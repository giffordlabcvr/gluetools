#    GLUE: A flexible system for virus sequence data
#    Copyright (C) 2018 The University of Glasgow
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as published
#    by the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#    Contact details:
#    MRC-University of Glasgow Centre for Virus Research
#    Sir Michael Stoker Building, Garscube Campus, 464 Bearsden Road, 
#    Glasgow G61 1QH, United Kingdom
#    
#    Josh Singer: josh.singer@glasgow.ac.uk
#    Rob Gifford: robert.gifford@glasgow.ac.uk
delete project example

create project example "An example GLUE project based on hepatitis E virus" --minVersion 1.1.13

run file glue/exampleSchemaExtensions.glue
 
project example

  run file glue/exampleProjectSettings.glue
  
  run file glue/exampleModules.glue
  
  # M49 regions / countries etc (UN standard)
  run file glue/m49_countries/populateM49All.glue
  
  # This Source contains the HEV reference sequencs
  import source sources/ncbi-refseqs 

  # import unconstrained alignment  
  # The alignment is based on Smith, et. al 2016, but has also been modified to:
  # 1. Replace internal NN's with --'s for KJ873911 in order to make blast fasta importer work properly.
  # 2. Add a row for sequence RR_L08816 -- this sequence is present in order to provide feature locations
  # 3. The missing subtype has been added for JQ013791 (3ra) KJ013415 (3ra) and EU723513 (3f)

  module unconstrainedAlignmentImporter import AL_UNCONSTRAINED -f alignments/SmithAlignment_23_1_2016_modified.fna

  run file glue/exampleFeatures.glue
  run file glue/exampleReferences.glue

  run file glue/exampleAlignmentTree.glue
  run file glue/exampleImportPhylogeny.glue

  # This Source contains a set of 10 HEV example sequences, downloaded from NCBI in GenBank XML format. 
  import source sources/ncbi-hev-examples
  
  # This Source contains a set of 10 HEV example sequences, in FASTA format. 
  import source sources/fasta-hev-examples
  
  # Populate certain metadata fields for the sequences in Source fasta-hev-examples
  module exampleTextFilePopulator populate -w "source.name = 'fasta-hev-examples'" -f tabular/fasta-hev-examples.txt
  
  # The exampleGenbankXmlPopulator contains a rule which will create custom publication objects for each 
  # pubmed ID mentioned in the GenBank XML, when the following command is executed
  module exampleGenbankXmlPopulator update custom-tables

  # ensure the link from sequence to publication is populated at this step 
  module exampleGenbankXmlPopulator populate -s publication

  # Other properties such as sequence length, host and publication title, 
  # doi etc will be populated from the GenBank XML when this command is run.
  module exampleGenbankXmlPopulator populate -s

  # Genotype the ncbi-hev-examples and fasta-hev-examples sequences.
  # Use the results of this to set the genotype / subtype metadata. 
  # Then add each sequence to the appropriate alignment tree constrained alignment
  # node, and recompute segments for that node.
  run script glue/exampleAddSeqsToAlignmentTree.js

  # Example unconstrained alignment containing sequences from subtype 1f.
  # Add and the subtype 1f reference and some subtype 1f sequences 
  # from fasta-hev-examples to a new unconstrained alignment.
  # Use MAFFT to generate the alignment homology.
  create alignment AL_UNCONSTRAINED_1f
  alignment AL_UNCONSTRAINED_1f
    add member -w "referenceSequences.name like 'REF_1f%'"
    add member -w "source.name = 'fasta-hev-examples' and genotype = '1' and subtype = 'f'"
    exit
  compute alignment AL_UNCONSTRAINED_1f exampleMafftAligner


  validate
  
