delete project EXAMPLE_PROJECT

create project EXAMPLE_PROJECT "GLUE example project"

# add some fields to the sequence table of this project
schema-project EXAMPLE_PROJECT
  table SEQUENCES

    # fields which will be populated from GenBank XML
    create field GB_GI_NUMBER VARCHAR
    create field GB_PRIMARY_ACCESSION VARCHAR
    create field GB_ACCESSION_VERSION VARCHAR
    create field GB_LOCUS VARCHAR
    create field GB_LENGTH INTEGER
    create field GB_GENOTYPE VARCHAR
    create field GB_SUBTYPE VARCHAR
    create field GB_RECOMBINANT BOOLEAN
    create field GB_PATENT_RELATED BOOLEAN
    create field GB_ORGANISM VARCHAR
    create field GB_ISOLATE VARCHAR
    create field GB_TAXONOMY VARCHAR 200
    create field GB_HOST VARCHAR 
    create field GB_COUNTRY VARCHAR
    create field GB_COLLECTION_YEAR INTEGER 
    create field GB_COLLECTION_MONTH VARCHAR
    create field GB_COLLECTION_MONTH_DAY INTEGER
    create field GB_CREATE_DATE DATE
    create field GB_UPDATE_DATE DATE

    # fields which will be populated from FASTA header
    create field HEADER_1 VARCHAR 50
    create field HEADER_2 VARCHAR 50

    # fields which will be populated from a tab-delimited file.
    create field CUSTOM_FIELD_X INTEGER
    create field CUSTOM_FIELD_Y VARCHAR 200
    exit
  exit
 
project EXAMPLE_PROJECT
  # create a source for sequences imported locally
  create source local

  # import a Genbank XML sequence from a local XML file. 
  import sequence local localGenbank1 GENBANK_XML sequence.xml

  # manually set a field on this sequence
  sequence local localGenbank1
    set field GB_HOST "a creature"
    exit
    
  # create an ncbi-importer module from XML config
  import module ncbi-importer ncbiImporter.xml
  
  # run it
  module ncbi-importer
    import
	exit
	  
  # create a genbank populator module from XML config
  import module gb-populator genbankXmlPopulator.xml

  # run it
  module gb-populator
  	populate
  	exit

  # create a FASTA exporter module from XML config
  import module fasta-exporter fastaExporter.xml
  module fasta-exporter
  	export -w "source.name = 'ncbi-nuccore'" -f export.fasta
  	exit

  # create a FASTA importer module from XML config
  import module fasta-importer fastaImporter.xml

  # run it
  module fasta-importer
    import -f fastaExample.fasta
	exit
  	
  # create a text file populator module from XML config
  import module textfile-populator textFilePopulator.xml

  # run it
  module textfile-populator
  	populate -f fieldValues.txt
  	exit
  
  # create some features
  create feature ALL_THE_GENES "all the genes"
  create feature -p ALL_THE_GENES GENE_1 "some gene"
  create feature -p ALL_THE_GENES GENE_2 "some other gene"
  create feature -p ALL_THE_GENES GENE_3 "yet another gene"

  # create a ref sequence from sequence localGenbank1 in source local
  create reference REF_1 local localGenbank1

  # add feature locations to the reference
  reference REF_1
    add feature-location ALL_THE_GENES
    feature-location ALL_THE_GENES
      add segment 10 100
      exit
    add feature-location GENE_3
    feature-location GENE_3
      add segment 20 50
      add segment 60 80
      exit
	exit

  # create an alignment AL_1 constrained to REF_1
  create alignment AL_1 -r REF_1

  # add some sequences as members to the alignment
  alignment AL_1
    add member -w "source.name = 'local'"
    exit

  # create a blast-aligner module from XML config
  import module blast-aligner blastAligner.xml
    
  # use the blast-aligner to align the members of AL_1
  compute alignment AL_1 blast-aligner
  
  create source sequencesToAlign
  
  import sequence sequencesToAlign seqToAlign1 FASTA sequencesToAlign/seq1.fasta
  import sequence sequencesToAlign seqToAlign2 FASTA sequencesToAlign/seq2.fasta
  import sequence sequencesToAlign seqToAlign3 FASTA sequencesToAlign/seq3.fasta
  
  sequence sequencesToAlign seqToAlign1 set field GB_PRIMARY_ACCESSION XY99901
  sequence sequencesToAlign seqToAlign2 set field GB_PRIMARY_ACCESSION XY99902
  sequence sequencesToAlign seqToAlign3 set field GB_PRIMARY_ACCESSION XY99903
  
  import module fasta-alignment-importer fastaAlignmentImporter.xml 
  
  module fasta-alignment-importer import AL_2 -f sequencesToAlign/alignmentA.fasta
  module fasta-alignment-importer import AL_2 -f sequencesToAlign/alignmentB.fasta
  
  import module fasta-alignment-exporter fastaAlignmentExporter.xml
  
  module fasta-alignment-exporter export alignment AL_1 -i -a -f exportAlignment.fasta
  