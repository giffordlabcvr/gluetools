package uk.ac.gla.cvr.gluetools.core.digs.importer.model.auto;

import java.util.Date;

import uk.ac.gla.cvr.gluetools.core.digs.importer.model.DigsObject;

/**
 * Class _Extracted was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Extracted extends DigsObject {

    public static final String ALIGN_LEN_PROPERTY = "alignLen";
    public static final String ASSIGNED_GENE_PROPERTY = "assignedGene";
    public static final String ASSIGNED_NAME_PROPERTY = "assignedName";
    public static final String BIT_SCORE_PROPERTY = "bitScore";
    public static final String BLAST_ID_PROPERTY = "blastId";
    public static final String DATA_TYPE_PROPERTY = "dataType";
    public static final String E_VALUE_EXP_PROPERTY = "eValueExp";
    public static final String E_VALUE_NUM_PROPERTY = "eValueNum";
    public static final String EXTRACT_END_PROPERTY = "extractEnd";
    public static final String EXTRACT_START_PROPERTY = "extractStart";
    public static final String GAP_OPENINGS_PROPERTY = "gapOpenings";
    public static final String IDENTITY_PROPERTY = "identity";
    public static final String MISMATCHES_PROPERTY = "mismatches";
    public static final String ORGANISM_PROPERTY = "organism";
    public static final String ORIENTATION_PROPERTY = "orientation";
    public static final String PROBE_TYPE_PROPERTY = "probeType";
    public static final String QUERY_END_PROPERTY = "queryEnd";
    public static final String QUERY_START_PROPERTY = "queryStart";
    public static final String RECORD_ID_PROPERTY = "recordId";
    public static final String SCAFFOLD_PROPERTY = "scaffold";
    public static final String SEQUENCE_PROPERTY = "sequence";
    public static final String SEQUENCE_LENGTH_PROPERTY = "sequenceLength";
    public static final String SUBJECT_END_PROPERTY = "subjectEnd";
    public static final String SUBJECT_START_PROPERTY = "subjectStart";
    public static final String TARGET_NAME_PROPERTY = "targetName";
    public static final String TIMESTAMP_PROPERTY = "timestamp";
    public static final String VERSION_PROPERTY = "version";

    public static final String RECORD_ID_PK_COLUMN = "Record_ID";

    public void setAlignLen(Integer alignLen) {
        writeProperty(ALIGN_LEN_PROPERTY, alignLen);
    }
    public Integer getAlignLen() {
        return (Integer)readProperty(ALIGN_LEN_PROPERTY);
    }

    public void setAssignedGene(String assignedGene) {
        writeProperty(ASSIGNED_GENE_PROPERTY, assignedGene);
    }
    public String getAssignedGene() {
        return (String)readProperty(ASSIGNED_GENE_PROPERTY);
    }

    public void setAssignedName(String assignedName) {
        writeProperty(ASSIGNED_NAME_PROPERTY, assignedName);
    }
    public String getAssignedName() {
        return (String)readProperty(ASSIGNED_NAME_PROPERTY);
    }

    public void setBitScore(Float bitScore) {
        writeProperty(BIT_SCORE_PROPERTY, bitScore);
    }
    public Float getBitScore() {
        return (Float)readProperty(BIT_SCORE_PROPERTY);
    }

    public void setBlastId(Integer blastId) {
        writeProperty(BLAST_ID_PROPERTY, blastId);
    }
    public Integer getBlastId() {
        return (Integer)readProperty(BLAST_ID_PROPERTY);
    }

    public void setDataType(String dataType) {
        writeProperty(DATA_TYPE_PROPERTY, dataType);
    }
    public String getDataType() {
        return (String)readProperty(DATA_TYPE_PROPERTY);
    }

    public void setEValueExp(Integer eValueExp) {
        writeProperty(E_VALUE_EXP_PROPERTY, eValueExp);
    }
    public Integer getEValueExp() {
        return (Integer)readProperty(E_VALUE_EXP_PROPERTY);
    }

    public void setEValueNum(Float eValueNum) {
        writeProperty(E_VALUE_NUM_PROPERTY, eValueNum);
    }
    public Float getEValueNum() {
        return (Float)readProperty(E_VALUE_NUM_PROPERTY);
    }

    public void setExtractEnd(Integer extractEnd) {
        writeProperty(EXTRACT_END_PROPERTY, extractEnd);
    }
    public Integer getExtractEnd() {
        return (Integer)readProperty(EXTRACT_END_PROPERTY);
    }

    public void setExtractStart(Integer extractStart) {
        writeProperty(EXTRACT_START_PROPERTY, extractStart);
    }
    public Integer getExtractStart() {
        return (Integer)readProperty(EXTRACT_START_PROPERTY);
    }

    public void setGapOpenings(Integer gapOpenings) {
        writeProperty(GAP_OPENINGS_PROPERTY, gapOpenings);
    }
    public Integer getGapOpenings() {
        return (Integer)readProperty(GAP_OPENINGS_PROPERTY);
    }

    public void setIdentity(Float identity) {
        writeProperty(IDENTITY_PROPERTY, identity);
    }
    public Float getIdentity() {
        return (Float)readProperty(IDENTITY_PROPERTY);
    }

    public void setMismatches(Integer mismatches) {
        writeProperty(MISMATCHES_PROPERTY, mismatches);
    }
    public Integer getMismatches() {
        return (Integer)readProperty(MISMATCHES_PROPERTY);
    }

    public void setOrganism(String organism) {
        writeProperty(ORGANISM_PROPERTY, organism);
    }
    public String getOrganism() {
        return (String)readProperty(ORGANISM_PROPERTY);
    }

    public void setOrientation(String orientation) {
        writeProperty(ORIENTATION_PROPERTY, orientation);
    }
    public String getOrientation() {
        return (String)readProperty(ORIENTATION_PROPERTY);
    }

    public void setProbeType(String probeType) {
        writeProperty(PROBE_TYPE_PROPERTY, probeType);
    }
    public String getProbeType() {
        return (String)readProperty(PROBE_TYPE_PROPERTY);
    }

    public void setQueryEnd(Integer queryEnd) {
        writeProperty(QUERY_END_PROPERTY, queryEnd);
    }
    public Integer getQueryEnd() {
        return (Integer)readProperty(QUERY_END_PROPERTY);
    }

    public void setQueryStart(Integer queryStart) {
        writeProperty(QUERY_START_PROPERTY, queryStart);
    }
    public Integer getQueryStart() {
        return (Integer)readProperty(QUERY_START_PROPERTY);
    }

    public void setRecordId(Integer recordId) {
        writeProperty(RECORD_ID_PROPERTY, recordId);
    }
    public Integer getRecordId() {
        return (Integer)readProperty(RECORD_ID_PROPERTY);
    }

    public void setScaffold(String scaffold) {
        writeProperty(SCAFFOLD_PROPERTY, scaffold);
    }
    public String getScaffold() {
        return (String)readProperty(SCAFFOLD_PROPERTY);
    }

    public void setSequence(String sequence) {
        writeProperty(SEQUENCE_PROPERTY, sequence);
    }
    public String getSequence() {
        return (String)readProperty(SEQUENCE_PROPERTY);
    }

    public void setSequenceLength(Integer sequenceLength) {
        writeProperty(SEQUENCE_LENGTH_PROPERTY, sequenceLength);
    }
    public Integer getSequenceLength() {
        return (Integer)readProperty(SEQUENCE_LENGTH_PROPERTY);
    }

    public void setSubjectEnd(Integer subjectEnd) {
        writeProperty(SUBJECT_END_PROPERTY, subjectEnd);
    }
    public Integer getSubjectEnd() {
        return (Integer)readProperty(SUBJECT_END_PROPERTY);
    }

    public void setSubjectStart(Integer subjectStart) {
        writeProperty(SUBJECT_START_PROPERTY, subjectStart);
    }
    public Integer getSubjectStart() {
        return (Integer)readProperty(SUBJECT_START_PROPERTY);
    }

    public void setTargetName(String targetName) {
        writeProperty(TARGET_NAME_PROPERTY, targetName);
    }
    public String getTargetName() {
        return (String)readProperty(TARGET_NAME_PROPERTY);
    }

    public void setTimestamp(Date timestamp) {
        writeProperty(TIMESTAMP_PROPERTY, timestamp);
    }
    public Date getTimestamp() {
        return (Date)readProperty(TIMESTAMP_PROPERTY);
    }

    public void setVersion(String version) {
        writeProperty(VERSION_PROPERTY, version);
    }
    public String getVersion() {
        return (String)readProperty(VERSION_PROPERTY);
    }

}
