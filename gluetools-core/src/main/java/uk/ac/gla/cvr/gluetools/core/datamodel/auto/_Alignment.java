package uk.ac.gla.cvr.gluetools.core.datamodel.auto;

import java.util.List;

import uk.ac.gla.cvr.gluetools.core.datamodel.GlueDataObject;
import uk.ac.gla.cvr.gluetools.core.datamodel.alignmentMember.AlignmentMember;
import uk.ac.gla.cvr.gluetools.core.datamodel.feature.Feature;
import uk.ac.gla.cvr.gluetools.core.datamodel.sequence.Sequence;

/**
 * Class _Alignment was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Alignment extends GlueDataObject {

    public static final String NAME_PROPERTY = "name";
    public static final String FEATURES_PROPERTY = "features";
    public static final String MEMBERS_PROPERTY = "members";
    public static final String REF_SEQUENCE_PROPERTY = "refSequence";

    public static final String NAME_PK_COLUMN = "NAME";

    public void setName(String name) {
        writeProperty(NAME_PROPERTY, name);
    }
    public String getName() {
        return (String)readProperty(NAME_PROPERTY);
    }

    public void addToFeatures(Feature obj) {
        addToManyTarget(FEATURES_PROPERTY, obj, true);
    }
    public void removeFromFeatures(Feature obj) {
        removeToManyTarget(FEATURES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Feature> getFeatures() {
        return (List<Feature>)readProperty(FEATURES_PROPERTY);
    }


    public void addToMembers(AlignmentMember obj) {
        addToManyTarget(MEMBERS_PROPERTY, obj, true);
    }
    public void removeFromMembers(AlignmentMember obj) {
        removeToManyTarget(MEMBERS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AlignmentMember> getMembers() {
        return (List<AlignmentMember>)readProperty(MEMBERS_PROPERTY);
    }


    public void setRefSequence(Sequence refSequence) {
        setToOneTarget(REF_SEQUENCE_PROPERTY, refSequence, true);
    }

    public Sequence getRefSequence() {
        return (Sequence)readProperty(REF_SEQUENCE_PROPERTY);
    }


}
