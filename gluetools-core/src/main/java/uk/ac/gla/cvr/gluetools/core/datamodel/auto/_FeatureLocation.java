package uk.ac.gla.cvr.gluetools.core.datamodel.auto;

import java.util.List;

import uk.ac.gla.cvr.gluetools.core.datamodel.GlueDataObject;
import uk.ac.gla.cvr.gluetools.core.datamodel.feature.Feature;
import uk.ac.gla.cvr.gluetools.core.datamodel.featureSegment.FeatureSegment;
import uk.ac.gla.cvr.gluetools.core.datamodel.refSequence.ReferenceSequence;
import uk.ac.gla.cvr.gluetools.core.datamodel.variation.Variation;

/**
 * Class _FeatureLocation was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _FeatureLocation extends GlueDataObject {

    public static final String FEATURE_PROPERTY = "feature";
    public static final String REFERENCE_SEQUENCE_PROPERTY = "referenceSequence";
    public static final String SEGMENTS_PROPERTY = "segments";
    public static final String VARIATIONS_PROPERTY = "variations";

    public static final String FEATURE_NAME_PK_COLUMN = "feature_name";
    public static final String REF_SEQ_NAME_PK_COLUMN = "ref_seq_name";

    public void setFeature(Feature feature) {
        setToOneTarget(FEATURE_PROPERTY, feature, true);
    }

    public Feature getFeature() {
        return (Feature)readProperty(FEATURE_PROPERTY);
    }


    public void setReferenceSequence(ReferenceSequence referenceSequence) {
        setToOneTarget(REFERENCE_SEQUENCE_PROPERTY, referenceSequence, true);
    }

    public ReferenceSequence getReferenceSequence() {
        return (ReferenceSequence)readProperty(REFERENCE_SEQUENCE_PROPERTY);
    }


    public void addToSegments(FeatureSegment obj) {
        addToManyTarget(SEGMENTS_PROPERTY, obj, true);
    }
    public void removeFromSegments(FeatureSegment obj) {
        removeToManyTarget(SEGMENTS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<FeatureSegment> getSegments() {
        return (List<FeatureSegment>)readProperty(SEGMENTS_PROPERTY);
    }


    public void addToVariations(Variation obj) {
        addToManyTarget(VARIATIONS_PROPERTY, obj, true);
    }
    public void removeFromVariations(Variation obj) {
        removeToManyTarget(VARIATIONS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Variation> getVariations() {
        return (List<Variation>)readProperty(VARIATIONS_PROPERTY);
    }


}
