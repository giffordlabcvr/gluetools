package uk.ac.gla.cvr.gluetools.core.datamodel.auto;

import java.util.List;

import uk.ac.gla.cvr.gluetools.core.datamodel.Field;
import uk.ac.gla.cvr.gluetools.core.datamodel.GlueDataObject;
import uk.ac.gla.cvr.gluetools.core.datamodel.Populator;
import uk.ac.gla.cvr.gluetools.core.datamodel.Sequence;
import uk.ac.gla.cvr.gluetools.core.datamodel.Sourcer;

/**
 * Class _Project was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Project extends GlueDataObject {

    public static final String DISPLAY_NAME_PROPERTY = "displayName";
    public static final String FIELDS_PROPERTY = "fields";
    public static final String POPULATORS_PROPERTY = "populators";
    public static final String SEQUENCES_PROPERTY = "sequences";
    public static final String SOURCERS_PROPERTY = "sourcers";

    public static final String ID_PK_COLUMN = "ID";

    public void setDisplayName(String displayName) {
        writeProperty(DISPLAY_NAME_PROPERTY, displayName);
    }
    public String getDisplayName() {
        return (String)readProperty(DISPLAY_NAME_PROPERTY);
    }

    public void addToFields(Field obj) {
        addToManyTarget(FIELDS_PROPERTY, obj, true);
    }
    public void removeFromFields(Field obj) {
        removeToManyTarget(FIELDS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Field> getFields() {
        return (List<Field>)readProperty(FIELDS_PROPERTY);
    }


    public void addToPopulators(Populator obj) {
        addToManyTarget(POPULATORS_PROPERTY, obj, true);
    }
    public void removeFromPopulators(Populator obj) {
        removeToManyTarget(POPULATORS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Populator> getPopulators() {
        return (List<Populator>)readProperty(POPULATORS_PROPERTY);
    }


    public void addToSequences(Sequence obj) {
        addToManyTarget(SEQUENCES_PROPERTY, obj, true);
    }
    public void removeFromSequences(Sequence obj) {
        removeToManyTarget(SEQUENCES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Sequence> getSequences() {
        return (List<Sequence>)readProperty(SEQUENCES_PROPERTY);
    }


    public void addToSourcers(Sourcer obj) {
        addToManyTarget(SOURCERS_PROPERTY, obj, true);
    }
    public void removeFromSourcers(Sourcer obj) {
        removeToManyTarget(SOURCERS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Sourcer> getSourcers() {
        return (List<Sourcer>)readProperty(SOURCERS_PROPERTY);
    }


}
