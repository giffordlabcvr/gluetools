package uk.ac.gla.cvr.gluetools.core.datamodel.auto;

import java.util.List;

import uk.ac.gla.cvr.gluetools.core.datamodel.GlueDataObject;
import uk.ac.gla.cvr.gluetools.core.datamodel.alignment.Alignment;
import uk.ac.gla.cvr.gluetools.core.datamodel.alignmentMember.AlignmentMember;
import uk.ac.gla.cvr.gluetools.core.datamodel.source.Source;

/**
 * Class _Sequence was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Sequence extends GlueDataObject {

    public static final String FORMAT_PROPERTY = "format";
    public static final String ORIGINAL_DATA_PROPERTY = "originalData";
    public static final String SEQUENCE_ID_PROPERTY = "sequenceID";
    public static final String ALIGNMENT_MEMBERSHIPS_PROPERTY = "alignmentMemberships";
    public static final String ALIGNMENTS_WHERE_REFERENCE_PROPERTY = "alignmentsWhereReference";
    public static final String SOURCE_PROPERTY = "source";

    public static final String SEQUENCE_ID_PK_COLUMN = "SEQUENCE_ID";
    public static final String SOURCE_PK_COLUMN = "SOURCE";

    public void setFormat(String format) {
        writeProperty(FORMAT_PROPERTY, format);
    }
    public String getFormat() {
        return (String)readProperty(FORMAT_PROPERTY);
    }

    public void setOriginalData(byte[] originalData) {
        writeProperty(ORIGINAL_DATA_PROPERTY, originalData);
    }
    public byte[] getOriginalData() {
        return (byte[])readProperty(ORIGINAL_DATA_PROPERTY);
    }

    public void setSequenceID(String sequenceID) {
        writeProperty(SEQUENCE_ID_PROPERTY, sequenceID);
    }
    public String getSequenceID() {
        return (String)readProperty(SEQUENCE_ID_PROPERTY);
    }

    public void addToAlignmentMemberships(AlignmentMember obj) {
        addToManyTarget(ALIGNMENT_MEMBERSHIPS_PROPERTY, obj, true);
    }
    public void removeFromAlignmentMemberships(AlignmentMember obj) {
        removeToManyTarget(ALIGNMENT_MEMBERSHIPS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AlignmentMember> getAlignmentMemberships() {
        return (List<AlignmentMember>)readProperty(ALIGNMENT_MEMBERSHIPS_PROPERTY);
    }


    public void addToAlignmentsWhereReference(Alignment obj) {
        addToManyTarget(ALIGNMENTS_WHERE_REFERENCE_PROPERTY, obj, true);
    }
    public void removeFromAlignmentsWhereReference(Alignment obj) {
        removeToManyTarget(ALIGNMENTS_WHERE_REFERENCE_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Alignment> getAlignmentsWhereReference() {
        return (List<Alignment>)readProperty(ALIGNMENTS_WHERE_REFERENCE_PROPERTY);
    }


    public void setSource(Source source) {
        setToOneTarget(SOURCE_PROPERTY, source, true);
    }

    public Source getSource() {
        return (Source)readProperty(SOURCE_PROPERTY);
    }


}
