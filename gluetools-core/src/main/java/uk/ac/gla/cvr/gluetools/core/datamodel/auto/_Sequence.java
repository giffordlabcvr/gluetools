/**
 *    GLUE: A flexible system for virus sequence data
 *    Copyright (C) 2018 The University of Glasgow
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU Affero General Public License as published
 *    by the Free Software Foundation, either version 3 of the License, or
 *    (at your option) any later version.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU Affero General Public License for more details.

 *    You should have received a copy of the GNU Affero General Public License
 *    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *    Contact details:
 *    MRC-University of Glasgow Centre for Virus Research
 *    Sir Michael Stoker Building, Garscube Campus, 464 Bearsden Road, 
 *    Glasgow G61 1QH, United Kingdom
 *    
 *    Josh Singer: josh.singer@glasgow.ac.uk
 *    Rob Gifford: robert.gifford@glasgow.ac.uk
*/
package uk.ac.gla.cvr.gluetools.core.datamodel.auto;

import java.util.List;

import uk.ac.gla.cvr.gluetools.core.datamodel.GlueDataObject;
import uk.ac.gla.cvr.gluetools.core.datamodel.alignmentMember.AlignmentMember;
import uk.ac.gla.cvr.gluetools.core.datamodel.refSequence.ReferenceSequence;
import uk.ac.gla.cvr.gluetools.core.datamodel.seqOrigData.SeqOrigData;
import uk.ac.gla.cvr.gluetools.core.datamodel.source.Source;

/**
 * Class _Sequence was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Sequence extends GlueDataObject {

    public static final String FORMAT_PROPERTY = "format";
    public static final String SEQUENCE_ID_PROPERTY = "sequenceID";
    public static final String ALIGNMENT_MEMBERSHIPS_PROPERTY = "alignmentMemberships";
    public static final String REFERENCE_SEQUENCES_PROPERTY = "referenceSequences";
    public static final String SEQ_ORIG_DATA_PROPERTY = "seqOrigData";
    public static final String SOURCE_PROPERTY = "source";

    public static final String SEQUENCE_ID_PK_COLUMN = "sequence_id";
    public static final String SOURCE_NAME_PK_COLUMN = "source_name";

    public void setFormat(String format) {
        writeProperty(FORMAT_PROPERTY, format);
    }
    public String getFormat() {
        return (String)readProperty(FORMAT_PROPERTY);
    }

    public void setSequenceID(String sequenceID) {
        writeProperty(SEQUENCE_ID_PROPERTY, sequenceID);
    }
    public String getSequenceID() {
        return (String)readProperty(SEQUENCE_ID_PROPERTY);
    }

    public void addToAlignmentMemberships(AlignmentMember obj) {
        addToManyTarget(ALIGNMENT_MEMBERSHIPS_PROPERTY, obj, true);
    }
    public void removeFromAlignmentMemberships(AlignmentMember obj) {
        removeToManyTarget(ALIGNMENT_MEMBERSHIPS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AlignmentMember> getAlignmentMemberships() {
        return (List<AlignmentMember>)readProperty(ALIGNMENT_MEMBERSHIPS_PROPERTY);
    }


    public void addToReferenceSequences(ReferenceSequence obj) {
        addToManyTarget(REFERENCE_SEQUENCES_PROPERTY, obj, true);
    }
    public void removeFromReferenceSequences(ReferenceSequence obj) {
        removeToManyTarget(REFERENCE_SEQUENCES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ReferenceSequence> getReferenceSequences() {
        return (List<ReferenceSequence>)readProperty(REFERENCE_SEQUENCES_PROPERTY);
    }


    public void setSeqOrigData(SeqOrigData seqOrigData) {
        setToOneTarget(SEQ_ORIG_DATA_PROPERTY, seqOrigData, true);
    }

    public SeqOrigData getSeqOrigData() {
        return (SeqOrigData)readProperty(SEQ_ORIG_DATA_PROPERTY);
    }


    public void setSource(Source source) {
        setToOneTarget(SOURCE_PROPERTY, source, true);
    }

    public Source getSource() {
        return (Source)readProperty(SOURCE_PROPERTY);
    }


}
