package uk.ac.gla.cvr.gluetools.core.datamodel.auto;

import uk.ac.gla.cvr.gluetools.core.datamodel.GlueDataObject;
import uk.ac.gla.cvr.gluetools.core.datamodel.project.Project;

/**
 * Class _LinkField was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _LinkField extends GlueDataObject {

    public static final String DEST_TABLE_NAME_PROPERTY = "destTableName";
    public static final String MULTIPLICITY_PROPERTY = "multiplicity";
    public static final String NAME_PROPERTY = "name";
    public static final String TABLE_PROPERTY = "table";
    public static final String PROJECT_PROPERTY = "project";

    public static final String NAME_PK_COLUMN = "name";
    public static final String PROJECT_NAME_PK_COLUMN = "project_name";
    public static final String TABLE_NAME_PK_COLUMN = "table_name";

    public void setDestTableName(String destTableName) {
        writeProperty(DEST_TABLE_NAME_PROPERTY, destTableName);
    }
    public String getDestTableName() {
        return (String)readProperty(DEST_TABLE_NAME_PROPERTY);
    }

    public void setMultiplicity(String multiplicity) {
        writeProperty(MULTIPLICITY_PROPERTY, multiplicity);
    }
    public String getMultiplicity() {
        return (String)readProperty(MULTIPLICITY_PROPERTY);
    }

    public void setName(String name) {
        writeProperty(NAME_PROPERTY, name);
    }
    public String getName() {
        return (String)readProperty(NAME_PROPERTY);
    }

    public void setTable(String table) {
        writeProperty(TABLE_PROPERTY, table);
    }
    public String getTable() {
        return (String)readProperty(TABLE_PROPERTY);
    }

    public void setProject(Project project) {
        setToOneTarget(PROJECT_PROPERTY, project, true);
    }

    public Project getProject() {
        return (Project)readProperty(PROJECT_PROPERTY);
    }


}
