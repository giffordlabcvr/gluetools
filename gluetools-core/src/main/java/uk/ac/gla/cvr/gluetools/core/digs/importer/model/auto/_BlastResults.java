package uk.ac.gla.cvr.gluetools.core.digs.importer.model.auto;

import java.util.Date;

import uk.ac.gla.cvr.gluetools.core.digs.importer.model.DigsObject;

/**
 * Class _BlastResults was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _BlastResults extends DigsObject {

    public static final String DATA_TYPE_PROPERTY = "dataType";
    public static final String HIT_LENGTH_PROPERTY = "hitLength";
    public static final String ORGANISM_PROPERTY = "organism";
    public static final String ORIENTATION_PROPERTY = "orientation";
    public static final String PROBE_GENE_PROPERTY = "probeGene";
    public static final String PROBE_NAME_PROPERTY = "probeName";
    public static final String PROBE_TYPE_PROPERTY = "probeType";
    public static final String QUERY_END_PROPERTY = "queryEnd";
    public static final String QUERY_START_PROPERTY = "queryStart";
    public static final String SCAFFOLD_PROPERTY = "scaffold";
    public static final String SUBJECT_END_PROPERTY = "subjectEnd";
    public static final String SUBJECT_START_PROPERTY = "subjectStart";
    public static final String TARGET_NAME_PROPERTY = "targetName";
    public static final String TIMESTAMP_PROPERTY = "timestamp";
    public static final String VERSION_PROPERTY = "version";

    public static final String RECORD_ID_PK_COLUMN = "Record_ID";

    public void setDataType(String dataType) {
        writeProperty(DATA_TYPE_PROPERTY, dataType);
    }
    public String getDataType() {
        return (String)readProperty(DATA_TYPE_PROPERTY);
    }

    public void setHitLength(Integer hitLength) {
        writeProperty(HIT_LENGTH_PROPERTY, hitLength);
    }
    public Integer getHitLength() {
        return (Integer)readProperty(HIT_LENGTH_PROPERTY);
    }

    public void setOrganism(String organism) {
        writeProperty(ORGANISM_PROPERTY, organism);
    }
    public String getOrganism() {
        return (String)readProperty(ORGANISM_PROPERTY);
    }

    public void setOrientation(String orientation) {
        writeProperty(ORIENTATION_PROPERTY, orientation);
    }
    public String getOrientation() {
        return (String)readProperty(ORIENTATION_PROPERTY);
    }

    public void setProbeGene(String probeGene) {
        writeProperty(PROBE_GENE_PROPERTY, probeGene);
    }
    public String getProbeGene() {
        return (String)readProperty(PROBE_GENE_PROPERTY);
    }

    public void setProbeName(String probeName) {
        writeProperty(PROBE_NAME_PROPERTY, probeName);
    }
    public String getProbeName() {
        return (String)readProperty(PROBE_NAME_PROPERTY);
    }

    public void setProbeType(String probeType) {
        writeProperty(PROBE_TYPE_PROPERTY, probeType);
    }
    public String getProbeType() {
        return (String)readProperty(PROBE_TYPE_PROPERTY);
    }

    public void setQueryEnd(Integer queryEnd) {
        writeProperty(QUERY_END_PROPERTY, queryEnd);
    }
    public Integer getQueryEnd() {
        return (Integer)readProperty(QUERY_END_PROPERTY);
    }

    public void setQueryStart(Integer queryStart) {
        writeProperty(QUERY_START_PROPERTY, queryStart);
    }
    public Integer getQueryStart() {
        return (Integer)readProperty(QUERY_START_PROPERTY);
    }

    public void setScaffold(String scaffold) {
        writeProperty(SCAFFOLD_PROPERTY, scaffold);
    }
    public String getScaffold() {
        return (String)readProperty(SCAFFOLD_PROPERTY);
    }

    public void setSubjectEnd(Integer subjectEnd) {
        writeProperty(SUBJECT_END_PROPERTY, subjectEnd);
    }
    public Integer getSubjectEnd() {
        return (Integer)readProperty(SUBJECT_END_PROPERTY);
    }

    public void setSubjectStart(Integer subjectStart) {
        writeProperty(SUBJECT_START_PROPERTY, subjectStart);
    }
    public Integer getSubjectStart() {
        return (Integer)readProperty(SUBJECT_START_PROPERTY);
    }

    public void setTargetName(String targetName) {
        writeProperty(TARGET_NAME_PROPERTY, targetName);
    }
    public String getTargetName() {
        return (String)readProperty(TARGET_NAME_PROPERTY);
    }

    public void setTimestamp(Date timestamp) {
        writeProperty(TIMESTAMP_PROPERTY, timestamp);
    }
    public Date getTimestamp() {
        return (Date)readProperty(TIMESTAMP_PROPERTY);
    }

    public void setVersion(String version) {
        writeProperty(VERSION_PROPERTY, version);
    }
    public String getVersion() {
        return (String)readProperty(VERSION_PROPERTY);
    }

}
