parser.getString.err=JsonParser#getString() is valid only KEY_NAME, VALUE_STRING, VALUE_NUMBER parser states. \
  But current parser state is {0}
parser.isIntegralNumber.err=JsonParser#isIntegralNumber() is valid only VALUE_NUMBER parser state. \
  But current parser state is {0}
parser.getInt.err=JsonParser#getInt() is valid only VALUE_NUMBER parser state. \
  But current parser state is {0}
parser.getLong.err=JsonParser#getLong() is valid only VALUE_NUMBER parser state. \
  But current parser state is {0}
parser.getBigDecimal.err=JsonParser#getBigDecimal() is valid only VALUE_NUMBER parser state. \
  But current parser state is {0}
parser.expected.eof=Expected EOF token, but got {0}
parser.tokenizer.close.io=I/O error while closing JSON tokenizer
parser.invalid.token=Invalid token={0} at {1}. Expected tokens are: {2}

generator.flush.io.err=I/O error while flushing generated JSON
generator.close.io.err=I/O error while closing JsonGenerator
generator.write.io.err=I/O error while writing in JsonGenerator
generator.illegal.method=Illegal method during JSON generation, \
  not valid in current context {0}
generator.double.infinite.nan=double value cannot be Infinite or NaN
generator.incomplete.json=Generating incomplete JSON
generator.illegal.multiple.text=Cannot generate more than one JSON text

writer.write.already.called=write/writeObject/writeArray/close method is already called

reader.read.already.called=read/readObject/readArray/close method is already called
reader.expected.array.got.object=Cannot read JSON array, found JSON object
reader.expected.object.got.array=Cannot read JSON object, found JSON array

objbuilder.name.null=Name in JsonObject's name/value pair cannot be null
objbuilder.value.null=Value in JsonObject's name/value pair cannot be null
objbuilder.object.builder.null=Object builder that is used to create a value in JsonObject's name/value pair cannot be null
objbuilder.array.builder.null=Array builder that is used to create a value in JsonObject's name/value pair cannot be null

arrbuilder.value.null=Cannot invoke add(null) while building JsonArray.
arrbuilder.object.builder.null=Object builder that is used to add a value to JSON array cannot be null
arrbuilder.array.builder.null=Array builder that is used to add a value to JSON array cannot be null

tokenizer.unexpected.char=Unexpected char {0} at {1}
tokenizer.expected.char=Unexpected char {0} at {1}, expecting ''{2}''
tokenizer.io.err=I/O error while parsing JSON
