apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'


apply plugin: 'org.hidetake.ssh'

remotes {
  gluehome {
    host = 'gluehome.cvr.gla.ac.uk'
    user = 'js460b'
    identity = file('/Users/joshsinger/.ssh/gluehome_id_rsa')
  }
  gluehome_aws {
    host = '52.16.113.119'
    user = 'ubuntu'
    identity = file('/Users/joshsinger/.ssh/gluehome-aws.pem')
  }
  
}

buildscript {
  repositories {
    // for ssh-deploy stuff
    jcenter()
  }
  dependencies {
    classpath group: 'org.hidetake', name: 'gradle-ssh-plugin', version: '1.1.3'
  }
}



// config for Glue-WS which tells it where (a) where to find glue config and (b) whether to update the schema on startup. 
task deployGlueWSConfigGlueHome(dependsOn: ':gluetools-core:deployGlueConfigGlueHome') {
  ext.glueWSConfigFile = new File(projectDir, '/context-gluehome.xml')
  ext.glueWSConfigTouchfile = new File(buildDir, '/deployGlueWSConfigGlueHome.touchfile')
  inputs.file glueWSConfigFile
  outputs.file glueWSConfigTouchfile
  doLast {
	  println "Uploading "+glueWSConfigFile.name
	  ssh.run {
	    session(remotes.gluehome) {
	      put from: glueWSConfigFile.absolutePath, into: '/tmp/gluetools-ws.xml'
	      execute 'sudo -n systemctl stop tomcat'
	      execute 'sudo -n mv /tmp/gluetools-ws.xml /usr/share/tomcat/conf/Catalina/localhost/gluetools-ws.xml'
	      execute 'sudo -n systemctl start tomcat'
	    }
	  }
	  glueWSConfigTouchfile.delete()
	  buildDir.mkdirs()
	  glueWSConfigTouchfile.createNewFile()
  }
}


task deployWarGlueHome(dependsOn: ['war','deployGlueWSConfigGlueHome']) {
  ext.glueWSWarFile = new File(buildDir, '/libs/gluetools-ws-'+version+'.war')
  ext.glueWSWarTouchfile = new File(buildDir, '/deployWarGlueHome.touchfile')
  inputs.file glueWSWarFile
  outputs.file glueWSWarTouchfile
  doLast {
	  println "Uploading "+glueWSWarFile.name
	  ssh.run {
	    session(remotes.gluehome) {
	      put from: glueWSWarFile.absolutePath, into: '/tmp/gluetools-ws.war'
	      execute 'sudo -n systemctl stop tomcat'
	      execute 'sudo -n rm -rf /usr/share/tomcat/webapps/gluetools-ws'
	      execute 'sudo -n rm -rf /usr/share/tomcat/webapps/gluetools-ws.war'
	      execute 'sudo -n mv /tmp/gluetools-ws.war /usr/share/tomcat/webapps'
	      execute 'sudo -n systemctl start tomcat'
	    }
	  }
	  glueWSWarTouchfile.delete()
	  buildDir.mkdirs()
	  glueWSWarTouchfile.createNewFile()
  }
}




// config for Glue-WS which tells it where (a) where to find glue config and (b) whether to update the schema on startup. 
task deployGlueWSConfigGlueHomeAWS(dependsOn: ':gluetools-core:deployGlueConfigGlueHomeAWS') {
  ext.glueWSConfigFile = new File(projectDir, '/context-gluehome-aws.xml')
  ext.glueWSConfigTouchfile = new File(buildDir, '/deployGlueWSConfigGlueHomeAWS.touchfile')
  inputs.file glueWSConfigFile
  outputs.file glueWSConfigTouchfile
  doLast {
	  println "Uploading "+glueWSConfigFile.name
	  ssh.run {
	    session(remotes.gluehome_aws) {
	      put from: glueWSConfigFile.absolutePath, into: '/tmp/gluetools-ws.xml'
	      execute 'sudo service tomcat7 stop'
	      execute 'sudo mv /tmp/gluetools-ws.xml /var/lib/tomcat7/conf/Catalina/localhost/gluetools-ws.xml'
	      execute 'sudo service tomcat7 start'
	    }
	  }
	  glueWSConfigTouchfile.delete()
	  buildDir.mkdirs()
	  glueWSConfigTouchfile.createNewFile()
  }
}


task deployWarGlueHomeAWS(dependsOn: ['war','deployGlueWSConfigGlueHomeAWS']) {
  ext.glueWSWarFile = new File(buildDir, '/libs/gluetools-ws-'+version+'.war')
  ext.glueWSWarTouchfile = new File(buildDir, '/deployWarGlueHomeAWS.touchfile')
  inputs.file glueWSWarFile
  outputs.file glueWSWarTouchfile
  doLast {
	  println "Uploading "+glueWSWarFile.name
	  ssh.run {
	    session(remotes.gluehome_aws) {
	      put from: glueWSWarFile.absolutePath, into: '/tmp/gluetools-ws.war'
	      execute 'sudo service tomcat7 stop'
	      execute 'sudo rm -rf /var/lib/tomcat7/webapps/gluetools-ws'
	      execute 'sudo rm -rf /var/lib/tomcat7/webapps/gluetools-ws.war'
	      execute 'sudo mv /tmp/gluetools-ws.war /var/lib/tomcat7/webapps'
	      execute 'sudo service tomcat7 start'
	    }
	  }
	  glueWSWarTouchfile.delete()
	  buildDir.mkdirs()
	  glueWSWarTouchfile.createNewFile()
  }
}






buildscript {
  repositories {
    // for ssh-deploy stuff
    jcenter()
  }
  dependencies {
    classpath group: 'org.hidetake', name: 'gradle-ssh-plugin', version: '1.1.3'
  }
}
 
repositories {
    mavenCentral()
}
 
dependencies {
	compile project(':gluetools-core')
	compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: '2.19'
	compile group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version: '2.19' 
 	compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0.1'
	providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
}